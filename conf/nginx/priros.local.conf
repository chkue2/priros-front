upstream priros_mobile {
    server prirosfront:3000;
}

upstream priros_pc {
    server prirosfront:3001;
}

upstream priros_api {
    server 192.168.0.41:8080;
}

server {
    listen 80;
    server_name priros.local *.priros.local;

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name priros.local www.priros.local;

    ssl_certificate /etc/nginx/ssl/priros.local.crt;
    ssl_certificate_key /etc/nginx/ssl/priros.local.key;

    access_log off;
    error_log off;

    location / {
        proxy_pass http://priros_pc;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

server {
    listen 443 ssl;
    server_name m.priros.local;

    ssl_certificate /etc/nginx/ssl/priros.local.crt;
    ssl_certificate_key /etc/nginx/ssl/priros.local.key;

    access_log off;
    error_log off;

    location / {
        proxy_pass http://priros_mobile;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

server {
    listen 443 ssl;
    server_name api.priros.local;

    ssl_certificate /etc/nginx/ssl/priros.local.crt;
    ssl_certificate_key /etc/nginx/ssl/priros.local.key;

    access_log off;
    error_log off;

    location / {

    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://m.priros.local';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        #
        # Custom headers and headers various browsers *should* be OK with but aren't
        #
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range, Authorization';
        #
        # Tell client that this pre-flight info is valid for 20 days
        #
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
     }


        proxy_pass http://priros_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}